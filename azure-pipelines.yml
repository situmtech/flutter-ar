trigger: 
  - release/*
pr: none


variables:
  - group: Passwords
  - group: SoftwareVersions
  - group: ChangelogIds
  - group: ConfluencePages

parameters:
  - name: flutterArVersion
    displayName: Set Flutter Ar plugin Version
    type: string
    default: "0.0.0"

resources:
  repositories:
    - repository: sys_kubernetes_templates
      type: bitbucket
      endpoint: Bitbucket - sistemas
      name: situm/sys-kubernetes-templates.git

pool:
  vmImage: $(ubuntuVersion)

steps:
  - checkout: self
    fetchTags: false
    fetchDepth: 1
    displayName: Checkout self

  - ${{ if eq(variables['Build.Reason'],'manual') }}:
    - bash: |
        if [[ "${{ parameters.flutterArVersion }}" == "0.0.0" ]];then
          echo -e "\n[!] IMPORTANT: You don't set the plugin version when you run the release branch and I'm not fortune teller\n"
          exit 1
        else
          echo "##vso[task.setvariable variable=version]$(echo ${{ parameters.flutterArVersion }})"
          echo -e "\n[+] I'm a shy step so I don't tell you anything\n"
        fi
 
      displayName: Set Flutter Version Manual
 
  - ${{ if ne(variables['Build.Reason'],'manual') }}:
    - bash: |
        FlutterArVersion=$(echo $(Build.SourceBranch) | cut -d "/" -f 4)
        echo "##vso[task.setvariable variable=version]$(echo $FlutterArVersion)"
        echo -e "\n[+] I'm a shy step that only executes where this pipeline run automatic\n"
      displayName: Set Flutter Version Automatic

  - bash: |
      if [ -d "flutter-ar" ];then
        cd flutter-ar
      fi
      currentBranch=$(echo $(Build.SourceBranch) | cut -d "/" -f 3,4)
      echo "##vso[task.setvariable variable=currentBranch]$(echo $currentBranch)"
      echo -e "\n[+] Defined versions:"
      echo -e "\t[+] Flutter Plugin version: $(version)"
      echo -e "\t[+] Current branch: $currentBranch"

      echo -e "\n[+] Setting git to push flutter version\n"
      git config --global user.email "sistemas@situm.es"
      git config --global user.name "Situmops"

        
      echo -e "\n[+] Setting git remote credentials\n"
      git remote set-url origin https://situmops:$(github_token)@github.com/$(Build.Repository.Name).git
      cat .git/config

    displayName: Initial Vars & Configs

  - bash: |
 
      mkdir $(Agent.BuildDirectory)/binaries
      cd $(Agent.BuildDirectory)/binaries
      echo -e "\n[+] Download Flutter version $(flutterLinuxVersion)\n"
 
      wget -q $(flutterLinuxVersion)
 
      echo -e "\n[+] Untar Flutter version\n"
      find . -iname "*.tar.xz" -exec tar xf {} \;
 
      echo -e "\n[+] Download gcloud cli version $(gcloudCliVersion)\n"
      curl -O $(gcloudCliVersion)
 
      echo -e "\n[+] Untar gcloud Cli version\n"
      find . -iname  "*.tar.gz" -exec tar xzf {} \;
 
    displayName: Install Binaries
 
  - bash: |
      if [ -d "flutter-ar" ];then
        cd flutter-ar
      fi
      #Export binary paths
      export PATH="$PATH:$(Agent.BuildDirectory)/binaries/flutter/bin"
      export PATH="$PATH:$(Agent.BuildDirectory)/binaries/google-cloud-sdk/bin"
 
      echo -e "\n[+] Fetch all branches\n"
      git fetch
 
      echo -e "\n[+] Checkout to $(currentBranch)\n"
 
      git checkout $(currentBranch)
 
      echo -e "\n[+] Change version in pubspec.yaml\n"
      sed "s/^version:\s[0-9].*$/version: $(version)/g" -i pubspec.yaml  
      echo -e "\n[+] Change version in situm_flutter_ar.podspec"
      sed "s/s.version\s.*= '[0-9\.].*'$/s.version          = '$(version)'/g" -i ios/situm_flutter_ar.podspec
      echo -e "\n[+] Set new plugin version in examples"
      cd example
      flutter pub get
      
      echo -e "\n[+] Add,commit and push changes to $(currentBranch)"
      git pull origin $(currentBranch)
      git commit -am "[skip ci] Setting the Flutter AR version to $(version)"
 
      git push --set-upstream origin $(currentBranch)
      git push
 
    displayName: Set version

  - template: azure-templates/publish_release.yml@sys_kubernetes_templates
    parameters:
      bitbucket:
        bitbucket_user: situmops
      system: "N/A"
      server: "github"
      repofolder: "flutter-ar"
      mergeBranches:
        - "main"
        - "develop"


  - task: DownloadSecureFile@1
    name: key_file
    inputs:
      secureFile: key-file.json

  - bash: |
      # Describe the login process
      # 1. Download the key-file.json: File with Google credentials to connect via gcloud cli
      # 2. Autenticate gcloud: Autenticate with gcloud cli using the credentials file.
      # 3. Autenticate pub.dev: Generar a temporary token against pub.dev that will be used to publish the packages
      # More info: https://dart.dev/tools/pub/automated-publishing#publish-from-anywhere-using-a-service-account
      cp $(key_file.secureFilePath) .
      
      export PATH="$PATH:$(Agent.BuildDirectory)/binaries/flutter/bin"
      export PATH="$PATH:$(Agent.BuildDirectory)/binaries/google-cloud-sdk/bin"

      echo -e "\n[+] Login with key-file.json\n"
      gcloud auth activate-service-account --key-file=key-file.json

      rm -rf key-file.json

      echo -e "\n[+] Create temporary token \n"
      gcloud auth print-identity-token --audiences=https://pub.dev | dart pub token add https://pub.dev

      if [ -d "flutter-ar" ];then
        cd flutter-ar
      fi

      echo -e "\n[+] Publish flutter package\n"
      dart pub publish --force

    displayName: Publish packages

    #Comment steps for future works
    #
      #  - ${{ if ne(variables['Build.Reason'],'manual') }}:
      #    - template: azure-templates/publish-changelog.yaml@sys_kubernetes_templates
      #      parameters:
      #        changelogId: $(Flutter_Changelog_id)
      #        android_changelog_version: $(android_changelog_version)
      #        ios_changelog_version: $(ios_changelog_version)
      #  
      #  - template: azure-templates/release-table.yaml@sys_kubernetes_templates
      #    parameters:
      #      versions: $(versions)
      #      releaseTable: FLUTTER_SDK_TABLE
      #      confluence_release_page: $(FLUTTER_SDK_TABLE)
      #      confluence_release_page_title: "SDK Automatic Release Table - Flutter Plugin"
      #      bitbucket:
      #        bitbucket_user: $(bitbucket_user)
      #        bitbucket_pass: $(bitbucket_pass)
      # 


